import React from 'react';
import { motion } from 'motion/react';

interface EndingData {
  type: string;
  title: string;
  description: string;
  flavor: string;
  icon: string;
  color: string;
  bgGradient: string;
}

export interface PlayerProfile {
  dominantStat: string;
  playStyle: 'balanced' | 'extremist' | 'cautious' | 'aggressive' | 'chaotic' | 'technocrat' | 'traditionalist';
  moralAlignment: 'good' | 'neutral' | 'evil';
  economicApproach: 'capitalist' | 'socialist' | 'mixed';
  militaryStance: 'pacifist' | 'defensive' | 'aggressive';
  innovationLevel: 'conservative' | 'moderate' | 'progressive' | 'radical';
}

export class EndingAnalyzer {
  static analyzePlayerProfile(stats: Record<string, number>, decisions: any[]): PlayerProfile {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–º–∏–Ω–∏—Ä—É—é—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const dominantStat = Object.entries(stats).reduce((a, b) => stats[a[0]] > stats[b[0]] ? a : b)[0];
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∏–ª—å –∏–≥—Ä—ã
    const statValues = Object.values(stats);
    const average = statValues.reduce((a, b) => a + b, 0) / statValues.length;
    const variance = statValues.reduce((sum, val) => sum + Math.pow(val - average, 2), 0) / statValues.length;
    
    let playStyle: PlayerProfile['playStyle'] = 'balanced';
    if (variance < 100) playStyle = 'balanced';
    else if (variance > 400) playStyle = 'extremist';
    else if (average < 40) playStyle = 'cautious';
    else if (average > 70) playStyle = 'aggressive';
    else playStyle = 'chaotic';
    
    // –û—Å–æ–±—ã–µ —Å—Ç–∏–ª–∏
    if (stats.science > 75) playStyle = 'technocrat';
    if (stats.morality > 75 && stats.science < 40) playStyle = 'traditionalist';
    
    // –ú–æ—Ä–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ
    let moralAlignment: PlayerProfile['moralAlignment'] = 'neutral';
    if (stats.morality > 70 && stats.ecology > 60) moralAlignment = 'good';
    else if (stats.morality < 30 || stats.army > 80) moralAlignment = 'evil';
    
    // –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥
    let economicApproach: PlayerProfile['economicApproach'] = 'mixed';
    if (stats.banks > 70 && stats.economy > 70) economicApproach = 'capitalist';
    else if (stats.morality > 60 && stats.medicine > 60) economicApproach = 'socialist';
    
    // –í–æ–µ–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
    let militaryStance: PlayerProfile['militaryStance'] = 'defensive';
    if (stats.army < 30) militaryStance = 'pacifist';
    else if (stats.army > 80) militaryStance = 'aggressive';
    
    // –£—Ä–æ–≤–µ–Ω—å –∏–Ω–Ω–æ–≤–∞—Ü–∏–π
    let innovationLevel: PlayerProfile['innovationLevel'] = 'moderate';
    if (stats.science < 30) innovationLevel = 'conservative';
    else if (stats.science > 60 && stats.science < 80) innovationLevel = 'progressive';
    else if (stats.science > 80) innovationLevel = 'radical';
    
    return {
      dominantStat,
      playStyle,
      moralAlignment,
      economicApproach,
      militaryStance,
      innovationLevel
    };
  }
  
  static generateEnding(profile: PlayerProfile, stats: Record<string, number>, isVictory: boolean): EndingData {
    if (!isVictory) {
      return this.getDefeatEnding(profile, stats);
    }
    
    // –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Ü–æ–≤–æ–∫
    const key = `${profile.playStyle}_${profile.moralAlignment}_${profile.innovationLevel}`;
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ü–æ–≤–∫–∏ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
    const specialEndings = this.getSpecialEndings();
    
    if (specialEndings[key]) {
      return specialEndings[key];
    }
    
    // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–Ω—Ü–æ–≤–∫–∏ –ø–æ —Å—Ç–∏–ª—é –∏–≥—Ä—ã
    return this.getStandardEnding(profile, stats);
  }
  
  private static getSpecialEndings(): Record<string, EndingData> {
    return {
      'technocrat_neutral_radical': {
        type: 'TECHNOLOGICAL_SINGULARITY',
        title: '–¢–ï–•–ù–û–õ–û–ì–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–ì–£–õ–Ø–†–ù–û–°–¢–¨',
        description: '–í—ã —Å–æ–∑–¥–∞–ª–∏ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ç–µ—Ö–Ω–æ-–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ, –≥–¥–µ –ò–ò –∏ –ª—é–¥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –≥–∞—Ä–º–æ–Ω–∏–∏. –í–∞—à–∞ –Ω–∞—Ü–∏—è —Å—Ç–∞–ª–∞ –ø–µ—Ä–≤–æ–π –ø–æ—Å—Ç—á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–µ–π.',
        flavor: '–ú–∞—à–∏–Ω—ã —Å–ª—É–∂–∞—Ç —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤—É, –∞ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º–∏.',
        icon: 'ü§ñ',
        color: '#a55eea',
        bgGradient: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
      },
      
      'balanced_good_progressive': {
        type: 'GOLDEN_AGE',
        title: '–ó–û–õ–û–¢–û–ô –í–ï–ö',
        description: '–ü–æ–¥ –≤–∞—à–∏–º –º—É–¥—Ä—ã–º –ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –Ω–∞—á–∞–ª–∞—Å—å –Ω–æ–≤–∞—è —ç—Ä–∞ –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—è. –ù–∞—Ü–∏—è –¥–æ—Å—Ç–∏–≥–ª–∞ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –º–µ–∂–¥—É –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∏ —Ç—Ä–∞–¥–∏—Ü–∏—è–º–∏.',
        flavor: '–ò—Å—Ç–æ—Ä–∏—è –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å –≤–∞—Å –∫–∞–∫ –≤–µ–ª–∏—á–∞–π—à–µ–≥–æ –ø—Ä–∞–≤–∏—Ç–µ–ª—è –≤—Å–µ—Ö –≤—Ä–µ–º—ë–Ω.',
        icon: 'üëë',
        color: '#f9ca24',
        bgGradient: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'
      },
      
      'extremist_evil_radical': {
        type: 'DARK_EMPIRE',
        title: '–¢–Å–ú–ù–ê–Ø –ò–ú–ü–ï–†–ò–Ø',
        description: '–í—ã —Å–æ–∑–¥–∞–ª–∏ —Ç–µ—Ö–Ω–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫—É—é –¥–∏–∫—Ç–∞—Ç—É—Ä—É, –≥–¥–µ –Ω–∞—É–∫–∞ —Å–ª—É–∂–∏—Ç —É–≥–Ω–µ—Ç–µ–Ω–∏—é. –í–∞—à–∞ –Ω–∞—Ü–∏—è —Å—Ç–∞–ª–∞ —Å–∞–º–æ–π –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π, –Ω–æ –ø–æ—Ç–µ—Ä—è–ª–∞ –¥—É—à—É.',
        flavor: '–í–µ–ª–∏–∫–∞—è —Å–∏–ª–∞ —Ç—Ä–µ–±—É–µ—Ç –≤–µ–ª–∏–∫–∏—Ö –∂–µ—Ä—Ç–≤. –í—ã –∑–∞–ø–ª–∞—Ç–∏–ª–∏ —Ü–µ–Ω—É –∑–∞ –∞–±—Å–æ–ª—é—Ç–Ω—É—é –≤–ª–∞—Å—Ç—å.',
        icon: '‚ö°',
        color: '#ff6b6b',
        bgGradient: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'
      },
      
      'traditionalist_good_conservative': {
        type: 'MORAL_RENAISSANCE',
        title: '–ú–û–†–ê–õ–¨–ù–û–ï –í–û–ó–†–û–ñ–î–ï–ù–ò–ï',
        description: '–í—ã –≤–µ—Ä–Ω—É–ª–∏ –Ω–∞—Ü–∏–∏ –¥—É—Ö–æ–≤–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –º–æ—Ä–∞–ª—å–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã. –û–±—â–µ—Å—Ç–≤–æ —Å—Ç–∞–ª–æ –±–æ–ª–µ–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–º –∏ —á–µ–ª–æ–≤–µ—á–Ω—ã–º.',
        flavor: '–ò–Ω–æ–≥–¥–∞ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä—ë–¥ –æ–∑–Ω–∞—á–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –∏—Å—Ç–æ–∫–∞–º.',
        icon: '‚õ™',
        color: '#fd79a8',
        bgGradient: 'linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%)'
      },
      
      'chaotic_neutral_progressive': {
        type: 'QUANTUM_DEMOCRACY',
        title: '–ö–í–ê–ù–¢–û–í–ê–Ø –î–ï–ú–û–ö–†–ê–¢–ò–Ø',
        description: '–í–∞—à —Ö–∞–æ—Ç–∏—á–Ω—ã–π —Å—Ç–∏–ª—å –ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ë–ª –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–π —Ñ–æ—Ä–º—ã –ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≥–¥–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∫–≤–∞–Ω—Ç–æ–≤—ã–º —Å—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.',
        flavor: '–ò–∑ —Ö–∞–æ—Å–∞ —Ä–æ–∂–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫.',
        icon: 'üåÄ',
        color: '#4ecdc4',
        bgGradient: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
      }
    };
  }
  
  private static getStandardEnding(profile: PlayerProfile, stats: Record<string, number>): EndingData {
    switch (profile.playStyle) {
      case 'balanced':
        return {
          type: 'STABLE_DEMOCRACY',
          title: '–°–¢–ê–ë–ò–õ–¨–ù–ê–Ø –î–ï–ú–û–ö–†–ê–¢–ò–Ø',
          description: '–í–∞—à–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–ª–æ —É—Å—Ç–æ–π—á–∏–≤–æ–µ –¥–µ–º–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–æ–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ.',
          flavor: '–ú—É–¥—Ä–æ—Å—Ç—å –≤ –±–∞–ª–∞–Ω—Å–µ - –∑–∞–ª–æ–≥ –¥–æ–ª–≥–æ–π –∂–∏–∑–Ω–∏ –Ω–∞—Ü–∏–∏.',
          icon: '‚öñÔ∏è',
          color: '#45b7d1',
          bgGradient: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
        };
        
      case 'extremist':
        return {
          type: 'RADICAL_TRANSFORMATION',
          title: '–†–ê–î–ò–ö–ê–õ–¨–ù–ê–Ø –¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–Ø',
          description: '–í–∞—à–∏ –∫—Ä–∞–π–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑–º–µ–Ω–∏–ª–∏ –æ–±–ª–∏–∫ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.',
          flavor: '–í–µ–ª–∏–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω—ã —Ç—Ä–µ–±—É—é—Ç —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.',
          icon: 'üí•',
          color: '#ff6b6b',
          bgGradient: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'
        };
        
      case 'technocrat':
        return {
          type: 'SCIENTIFIC_UTOPIA',
          title: '–ù–ê–£–ß–ù–ê–Ø –£–¢–û–ü–ò–Ø',
          description: '–ù–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª–∏ –≤–∞—à—É –Ω–∞—Ü–∏—é –≤ —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫—É—é —É—Ç–æ–ø–∏—é.',
          flavor: '–ó–Ω–∞–Ω–∏–µ - —ç—Ç–æ —Å–∏–ª–∞, –∏ –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –µ—ë –º—É–¥—Ä–æ.',
          icon: 'üî¨',
          color: '#a55eea',
          bgGradient: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
        };
        
      default:
        return {
          type: 'MIXED_LEGACY',
          title: '–°–ú–ï–®–ê–ù–ù–û–ï –ù–ê–°–õ–ï–î–ò–ï',
          description: '–í–∞—à–µ –ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–≤–∏–ª–æ —Å–ª–æ–∂–Ω–æ–µ, –Ω–æ –∑–Ω–∞—á–∏–º–æ–µ –Ω–∞—Å–ª–µ–¥–∏–µ.',
          flavor: '–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—É–¥–∏—Ç –≤–∞—à–∏ –¥–µ—è–Ω–∏—è.',
          icon: 'üìú',
          color: '#ffffff',
          bgGradient: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
        };
    }
  }
  
  private static getDefeatEnding(profile: PlayerProfile, stats: Record<string, number>): EndingData {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏—á–∏–Ω—É –ø–æ—Ä–∞–∂–µ–Ω–∏—è
    const lowestStat = Object.entries(stats).reduce((a, b) => stats[a[0]] < stats[b[0]] ? a : b);
    const [statName, value] = lowestStat;
    
    const defeatReasons: Record<string, EndingData> = {
      army: {
        type: 'MILITARY_COLLAPSE',
        title: '–í–û–ï–ù–ù–´–ô –ö–û–õ–õ–ê–ü–°',
        description: '–û—Å–ª–∞–±–ª–µ–Ω–Ω–∞—è –∞—Ä–º–∏—è –Ω–µ —Å–º–æ–≥–ª–∞ –∑–∞—â–∏—Ç–∏—Ç—å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö —É–≥—Ä–æ–∑.',
        flavor: '–ú–∏—Ä - —ç—Ç–æ —Ö–æ—Ä–æ—à–æ, –Ω–æ –Ω–µ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –≤—Ä–∞–≥–∏ —É –≤–æ—Ä–æ—Ç.',
        icon: '‚öîÔ∏è',
        color: '#ff6b6b',
        bgGradient: 'linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%)'
      },
      
      ecology: {
        type: 'ECOLOGICAL_DISASTER',
        title: '–≠–ö–û–õ–û–ì–ò–ß–ï–°–ö–ê–Ø –ö–ê–¢–ê–°–¢–†–û–§–ê',
        description: '–ü–ª–∞–Ω–µ—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∂–∏–∑–Ω—å –∏–∑-–∑–∞ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–∞–∑—Ä—É—à–µ–Ω–∏–π.',
        flavor: '–ü—Ä–æ–≥—Ä–µ—Å—Å –±–µ–∑ –∑–∞–±–æ—Ç—ã –æ –ø—Ä–∏—Ä–æ–¥–µ - –ø—É—Ç—å –∫ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—é.',
        icon: 'üíÄ',
        color: '#4ecdc4',
        bgGradient: 'linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%)'
      },
      
      economy: {
        type: 'ECONOMIC_COLLAPSE',
        title: '–≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–ò–ô –ö–†–ê–•',
        description: '–≠–∫–æ–Ω–æ–º–∏–∫–∞ —Ä—É—Ö–Ω—É–ª–∞, –æ—Å—Ç–∞–≤–∏–≤ –Ω–∞—Ü–∏—é –≤ –Ω–∏—â–µ—Ç–µ –∏ —Ö–∞–æ—Å–µ.',
        flavor: '–î–µ–Ω—å–≥–∏ –Ω–µ –≤—Å—ë, –Ω–æ –±–µ–∑ –Ω–∏—Ö - –Ω–∏—á—Ç–æ.',
        icon: 'üí∏',
        color: '#00b894',
        bgGradient: 'linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%)'
      },
      
      morality: {
        type: 'MORAL_DECAY',
        title: '–ú–û–†–ê–õ–¨–ù–û–ï –†–ê–ó–õ–û–ñ–ï–ù–ò–ï',
        description: '–û–±—â–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—É—à–∏–ª–æ—Å—å –∏–∑–Ω—É—Ç—Ä–∏ –∏–∑-–∑–∞ –ø–æ–ª–Ω–æ–π –ø–æ—Ç–µ—Ä–∏ –º–æ—Ä–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π.',
        flavor: '–ù–∞—Ü–∏—è –±–µ–∑ –º–æ—Ä–∞–ª–∏ - —ç—Ç–æ –Ω–µ –Ω–∞—Ü–∏—è, –∞ —Ç–æ–ª–ø–∞.',
        icon: 'üíî',
        color: '#fd79a8',
        bgGradient: 'linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%)'
      }
    };
    
    return defeatReasons[statName] || {
      type: 'GENERAL_COLLAPSE',
      title: '–í–°–ï–û–ë–©–ò–ô –ö–û–õ–õ–ê–ü–°',
      description: '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ —Ä—É—Ö–Ω—É–ª–æ –ø–æ–¥ –≥—Ä—É–∑–æ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏—Ö—Å—è –ø—Ä–æ–±–ª–µ–º.',
      flavor: '–ò–Ω–æ–≥–¥–∞ –¥–∞–∂–µ –ª—É—á—à–∏–µ –Ω–∞–º–µ—Ä–µ–Ω–∏—è –ø—Ä–∏–≤–æ–¥—è—Ç –∫ —Ö—É–¥—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º.',
      icon: 'üíÄ',
      color: '#ffffff',
      bgGradient: 'linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%)'
    };
  }
}